Q1.Sum of even and odd numbers in a range of n
#include<stdio.h>
int main(){
    int n;
    int sum_e=0,sum_o=0;
    scanf("%d",&n);
    for(int i=1;i<=n;i++){
        if(i%2==0){
            sum_e+=i;
        }
        else{
            sum_o+=i;
        }
    }
    printf("Sum of even numbers: %d\n",sum_e);
    printf("Sum of odd numbers: %d",sum_o);
    return 0;
}

Q2.Designing a program to calculate the sum of all numbers less than a given limit that are multiples of either of two specified numbers.
#include<stdio.h>
int main(){
    int N,M,P;
    int sum_M=0,sum_P=0;
    int total_sum;
    scanf("%d %d %d",&N,&M,&P);
    for(int i=1;i<N;i++){
        if (i%M==0){
            sum_M+=i;
        }
        else if(i%P==0){
            sum_P+=i;
        }
        else{
            continue;
        }
    }
    total_sum=sum_M+sum_P;
    printf("%d",total_sum);
    return 0;
}

Q3.Calculating Profit or Loss while selling products
#include<stdio.h>
int main(){
    float cp,sp;
    float diff;
    scanf("%f",&cp);
    scanf("%f",&sp);
    diff=sp-cp;
    if (diff>0){
        printf("Profit = %.2f",diff);
    }
    else if (diff==0){
        printf("No profit or no loss");
    }
    else{
        diff=diff*(-1);
        printf("Loss = %.2f",diff);
    }
    return 0;
    
}

Q4.Checking a number is prime or not
#include<stdio.h>
int main(){
    int n,count;
    scanf("%d",&n);
    if (n<2 or n>10000){
        printf("Enter a valid input");
    }
    else{
        for(int i=2;i<=n;i++){
            if (n%i==0){
                count++;
            }
        }
      
        if (count>2){
            printf("%d is not a prime number.",n);
        }
        else{
            printf("%d is a prime number.",n);
        }
        }
    return 0;
}
Q5.Antony is tasked with developing a program that takes an integer input and performs different operations based on whether the number is odd or even. If the input number is odd, the program should reverse it.If it's even, it should calculate the sum of its digits. 
#include<stdio.h>
int main(){
    int n;
    scanf("%d",&n);
    if (n%2==0){
        int n1=n,rem,sum=0;
        while(n1>0){
            rem=n1%10;
            n1=n1/10;
            sum+=rem;
        }
        printf("Sum of digits: %d",sum);
    }
    else{
        int n2=n,rem,res=0;
        while(n2>0){
            rem=n2%10;
            n2=n2/10;
            if(n2!=0){
                res=(res+rem)*10;
            }
            else{
                res=res+rem;
            }
        }
        printf("Reversed number: %d",res);
    }
    return 0;
}

Q6.Amit and Angel wants to create a program where they are given the ages of two people, a current year, and a future year. They want to calculate the number of years until one person is twice as old as the other. 
//Program to compare ages
#include<stdio.h>
int main(){
    int A,B,C,F,diff;
    scanf("%d\n%d\n%d\n%d",&A,&B,&C,&F);
    diff=F-C;
    if (2*A==B or A==2*B){
        printf("0");
    }
    else{
        int wanted;
        wanted=B-2*A;
        if (wanted<0){
            wanted=2*B-A;
            if (wanted<0){
                wanted=A-2*B;
            }
        }
        else{
            wanted=wanted;
        }
        if (wanted>diff){
            printf("No such year found up to %d",F);
        }
        else{
            printf("%d",wanted);
        }
    }
    return 0;
}
7.Raj wants to calculate the total cost of renting a car based on the rental duration and the type of car.The rental cost is determined by the following rules:Car Type Rates:Economy (E): Rs 1000 per dayLuxury (L): Rs 2000 per day;Insurance Charge:If the rental duration exceeds 7 days, an additional long-term rental insurance charge of Rs 1500 is added to the total cost.Total Rental Cost Formula:Total Cost = (Number of Days × Rate Per Day) + Insurance Charge (if
applicable)
Answer
//Rental Cost
#include<stdio.h>
int main(){
 int n;
 char str;
 float total=0;
 scanf("%d\n%c",&n,&str);
 if (str=='E'){
 total=n*1000;
 if (n>7 and n<=30){
 total+=1500;
 }
 else if(n>30){
 printf("Invalid number of days");
 }
 }
 else if(str=='L'){
 total=n*2000;
 if (n>7 and n<=30){
 total+=1500;
 }
 else if(n>30){
 printf("Invalid number of days");
 }
 }
 printf("%.2f",total);
 return 0;

}

8.Lisa has discovered an interesting pattern in numbers, where alternating chunks of digits are extracted, reversed, and used to form a sum. Given a number N and a chunk size M, the number is split into chunks of size M starting from the rightmost side. These chunks are then reversed, and alternating chunks are added and subtracted to form a final sum.Your task is to implement a program that calculates this final alternating sum based on the reversed chunks.
Answer
#include<stdio.h>
#include<math.h>
int alternating_sum(int a,int b);
int main(){
 int a;
 int b;
 scanf("%d",&a);
 scanf("%d",&b);
 int result=alternating_sum(a,b);
 printf("%d",result);
 return 0;
}int alternating_sum(int a,int b){
 int total_sum=0;
 int add=1;
 while(a>0){
 int chunk=a%(int)pow(10,b);
 total_sum+=chunk*add;
 add*=-1;
 a/=(int)pow(10,b);
 }
 return total_sum;
}

9.Neha runs a ftness center and wants to create a system to calculate the total membership fee based on the type of plan a customer selects.Customers can choose from three membership options:Basic Plan:Charge Rs 1,000 per month. (total_fee = duration * 1000)If the duration exceeds 6 months, give a 5% discount on the total fee. (total_fee =total_fee - (total_fee * 5 / 100)).Standard Plan:Charge Rs 1,500 per month. (total_fee = duration * 1500)If the duration exceeds 12 months, give a 10% discount on the total fee. (total_fee =total_fee - (total_fee * 10/ 100)).Premium Plan:Charge Rs 2,500 per month. ( total_fee = duration * 2500)If the duration exceeds 18 months, give a 15% discount on the total fee. (total_fee =total_fee - (total_fee * 15 / 100)).Task: Based on the customer’s choice, calculate the total membership fee.
//Fitness Center Program
#include<stdio.h>
int main(){
 int choice,n;
 scanf("%d",&choice);
 scanf("%d",&n);
 int total;
 if (choice==1){
 total=1000*n;
 if (n>6){
 total-=(1000*n)*0.05;
 }
 }
 else if(choice==2){
 total=1500*n;
 if (n>12){
 total-=(1500*n)*0.10;
 }
 }
 else if(choice==3){
 total=2500*n;
 if (n>18){
 total-=(2500*n)*0.15;
 }
 }
 printf("%d",total);
 return 0;
}

10.Noah analyzes numbers in a given range, where the product of their digits is a perfect cube. He wants to identify and print all such numbers between two integers.Your task is to write a program for Noah to fnd and print all numbers in the range where the product of their digits is a perfect cube.
//To print perfect cubes in a range
#include<stdio.h>
#include<math.h>
int is_perfect_cube(int n){
 int cube_root=cbrt(n);
 if (cube_root==0){
 return 0;
 }
 else
 return cube_root*cube_root*cube_root==n;
}
int product_of_digits(int n){
 int product=1;
 while(n>0){
 product*=n%10;
 n/=10;
 }
 return product;
}
int main(){
 int a,b;
 scanf("%d %d",&a,&b);
 for(int i=a;i<=b;i++){
 if(is_perfect_cube(product_of_digits(i))){
 printf("%d ",i);
 }
 }
 return 0;
}

11.Raveena is developing a program to analyze an integer array. Her task is to identify and tally the negative numbers within this array. This analysis is crucial for Raveena's dataset, as negative values might represent specific conditions or anomalies that require further investigation. Write a program that assists Raveena in counting and displaying the number of negative elements in an integer array.
#include<stdio.h>
int main(){
    int n,arr[10];
    int count=0;
    scanf("%d",&n);
    for(int i=0;i<n;i++){
        scanf("%d",&arr[i]);
        if(arr[i]<0){
            count++;
        }
        else
            continue;
    }
    if (count!=0){
        printf("Total negative elements in array = %d",count);
    }
    else{
        printf("No negative elements in the array");
    }
    return 0;
}

12.Aishu is working on an array manipulation project and needs to find the maximum and minimum elements in an array of integers. Write a program that takes an array of integers as input and finds the maximum and minimum elements in it.The first line consists of an integer n, representing the array size.The second line input consists of n space-separated integers, representing the array elements.
// Maximum and Minimum values in an array
#include<stdio.h>
int main(){
    int n,arr[20];
    scanf("%d",&n);
    for(int i=0;i<n;i++){
        scanf("%d",&arr[i]);
    }
    int p=arr[0],q=arr[0];
    for(int i=0;i<n;i++){
        if (arr[i]>p){
            p=arr[i];
        }
        else
            continue;
    }
    for(int i=0;i<n;i++){
        if(arr[i]<q){
            q=arr[i];
        }
        else{
            continue;
        }
    }
    printf("Maximum element is: %d\n",p);
    printf("Minimum element is: %d",q);
    return 0;
}

13.Rajdeep is exploring matrices. He wants to write a program to display the lower triangular part of a square matrix. You have to assist him in creating the code.Write a program that takes an integer N as input and a square matrix of size NxN. Implement the logic to display the lower triangular part of the matrix.
#include<stdio.h>
int main(){
    int n;
    scanf("%d",&n);
    int arr[n][n];
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            scanf("%d",&arr[i][j]);
            if (j>i){
                arr[i][j]=0;
            }
            else
                continue;
        }
    }
    for (int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            printf("%d ",arr[i][j]);
        }
        printf("\n");
    }
    return 0;
}

14.In a mathematics class, students are learning about matrices and their properties. The teacher has assigned a task to the students to calculate the sum of each row in a 3x3 matrix.As a programmer, assist the students in calculating the sum by creating a program.The input consists of the elements of the 3x3 matrix.The output prints the sum of each row of the matrix in each line.
//Sum of each row in a matrix
#include<stdio.h>
int main(){
    int arr[3][3];
    int sum=0;
    for(int i=0;i<3;i++){
        sum=0;
        for(int j=0;j<3;j++){
            scanf("%d",&arr[i][j]);
            sum+=arr[i][j];
        }
        printf("\n");
        printf("Sum of row %d: %d",i,sum);
    }
    return 0;
}

15.Misha wants to check and print whether the given number N is a neon number or not. Write a program that uses a function and helps her to complete this task.A neon number is a number where the sum of digits of the square of the number is equal to the number.Function Prototype: int neon(int).The input consists of an integer, N.If N is a neon number, print "N is a neon number" Otherwise, print "N is not a neon number".
#include<stdio.h>
int neon(int N){
    int square=N*N;
    int sum_of_digits=0;
    while (square>0){
        sum_of_digits+=square%10;
        square/=10;
    }
    if (sum_of_digits==N){
        return 1;
    }
    else{
        return 0;
    }
}
int main(){
    int N;
    scanf("%d",&N);
    if (neon(N)){
        printf("%d is a neon number\n",N);
    }
    else{
        printf("%d is not a neon number\n",N);
    }
    return 0;
}

16.Design a program to input a numeric base and exponent, efficiently calculate and display the result of the base raised to the given exponent. Use a function called calculatePower() that calculates and outputs the result.The first line of input consists of an integer b, representing the base value.
The second line consists of an integer e, representing the exponent value.The output prints an integer representing the result of the base raised to the exponent value.The output prints an integer representing the result of the base raised to the exponent value.
//Calculating power of a number
#include<stdio.h>
int calculatePower(int a,int b){
    int res=1;
    for(int i=1;i<=b;i++){
        res*=a;
    }
    return res;
}
int main(){
    int b,e;
    scanf("%d\n%d",&b,&e);
    int p=calculatePower(b,e);
    printf("%d",p);
    return 0;
}

17.Ramesh is currently working on a program to concatenate two strings efficiently. He wants to create a tool that can take two input strings, concatenate them, and then display the resulting string.Help him in the program.The input consists of two strings in separate lines.The output displays a single string, which is the concatenation of the two input strings without any space.Each input string has a maximum length of 25 characters.The input string should be lowercase and uppercase letters without any spaces.
//Concateinating Strings
#include<stdio.h>
#include<string.h>
int main(){
    char str1[100],str2[20];
    scanf("%s",str1);
    scanf("%s",str2);
    strcat(str1,str2);
    printf("%s",str1);
    return 0;
}

18.Abi is currently working on a program to calculate the length of a given string. She needs a tool that can efficiently determine the number of characters in a string.Help her to complete task.The input consists of the string without space.The output prints the length of the string.The input string consists of a maximum of 50 characters.
//Calculating Lenght of a string
#include<stdio.h>
#include<string.h>
int main(){
    char a[100];
    scanf("%s",&a);
    printf("%d",strlen(a));
    return 0;
}

19.Philip needs a program that reads 10 integers from the user and checks if all the integers are the same. If they are not the same, the program should sort the integers in ascending order and display the sorted array. If all integers are the same, it should simply indicate this.Help Philip by writing a program to achieve this functionality.The input consists of an array of 10 integers separated by space.If the numbers are not the same, the output displays "Arranged elements are: " followed by the input array sorted array in ascending order separated by space.If the numbers are the same, the output displays "All numbers are the same".
//Checking 1D Array
#include<stdio.h>
int main(){
    int arr[10];
    for(int i=0;i<10;i++){
        scanf("%d ",&arr[i]);
    }
    int a=arr[0],p=10;
    for(int i=0;i<10;i++){
        if (arr[i]==a){
            p=0;
            continue;
        }
        else{
            p=10;
            break;
        }
    }
    if(p==0){
        printf("All elements are the same");
    }
    else{
        for(int i=0;i<10;i++){
            for(int j=i+1;j<10;j++){
                if(arr[i]>arr[j]){
                    int temp=arr[i];
                    arr[i]=arr[j];
                    arr[j]=temp;
                }
            }
        }
        printf("Arranged elements are: ");
        for(int i=0;i<10;i++){
            printf("%d ",arr[i]);
        }
    }
    return 0;
    
}

20.Lakshith and Manav, best friends, enjoy summer vacation playing games. This time, they delve into matrix manipulation. They write a program to determine if a matrix is symmetric by comparing it with its transpose.If the matrix is symmetric, they celebrate their victory; otherwise, they continue their quest for the perfect game.The first line of input consists of an integer N, representing the size of the matrix.The next N lines consist of N space-separated integers, representing the matrix elements.The first line of output prints "Original matrix:".The next N lines print N elements in each line representing the original matrix.The following line prints "Transpose matrix:".The next N lines print N elements in each line representing the transpose of the original matrix.The last line prints one of the following:If both matrices are symmetric, print "Matrix is Symmetric!"If both matrices are not symmetric, print "Matrix is not Symmetric!".
//Checking Matrix is Symmetric or not
#include<stdio.h>
int main(){
    int n;
    scanf("%d",&n);
    int matrix[n][n];
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            scanf("%d ",&matrix[i][j]);
        }
        printf("\n");
    }
    printf("Original matrix:\n");
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            printf("%d ",matrix[i][j]);
        }
        printf("\n");
    }
    printf("\n");
    printf("Transpose matrix:\n");
    int transpose_matrix[n][n];
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            printf("%d ",matrix[j][i]);
            transpose_matrix[i][j]=matrix[j][i];
            scanf("%d ",&transpose_matrix[i][j]);
        }
        printf("\n");
    }
    int p=10;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            if (matrix[i][j]==transpose_matrix[i][j]){
                continue;
            }
            else{
                p=0;
                break;
            }
        }
        
    }
    if(p==10){
        printf("Matrix is Symmetric!");
    }
    else{
        printf("Matrix is not Symmetric!");
    }
    
    return 0;
}

21.Akar is working on a program that modifies a given matrix based on the presence of zeros in its rows and columns. He needs your help to write a program that takes an input matrix and modifies it as follows: if a cell in the matrix contains a zero, then the entire row and column of that cell should be set to zero.Assist him by writing the program.The first line consists of two integers r and c, separated by a space, representing the number of rows and columns in the matrix.The next r lines contain c space-separated integers, representing the elements of the matrix.If there are zeros in the matrix, display the modified matrix after replacing rows and columns with zeros if any element in the row or column is zero. If there are no zeros in the matrix, display the given matrix as it is.
#include<stdio.h>
int main(){
    int r,c;
    scanf("%d %d",&r,&c);
    int matrix[r][c];
    for(int i=0;i<r;i++){
        for(int j=0;j<c;j++){
            scanf("%d ",&matrix[i][j]);
        }
    }
    int rows[r]={0};
    int cols[c]={0};
    for(int i=0;i<r;i++){
        for(int j=0;j<c;j++){
            if(matrix[i][j]==0){
                rows[i]=1;
                cols[j]=1;
            }
        }
    }
    for(int i=0;i<r;i++){
        for(int j=0;j<c;j++){
            if(rows[i]==1||cols[j]==1){
                matrix[i][j]=0;
            }
        }
    }
    for(int i=0;i<r;i++){
        for(int j=0;j<c;j++){
            printf("%d ",matrix[i][j]);
        }
        printf("\n");
    }   
    return 0;
}

22.Green Wood High School is set to premiere a programming tournament for high school-aged math and science students across the country. Based on this contest, the school has called for all interested candidates to take a qualifying test at the school premises.Before the qualifier, the event coordinators chose the problem sets and wanted to code them beforehand to ease the evaluation procedure. They wanted your help to code a few of the problem sets, one of which involved the Fibonacci series.We all know the Fibonacci sequence, each term of it is the sum of the two previous terms. For Example, F(1) = 1, F(2) = 1, F(3) = 2, and so on.In this problem, we need to find just the last digit of a Fibonacci series termed F(n), where n is the input. Write a program using functions to output the last digit of the term F(n). 
//C Program for Fibonacci series
#include<stdio.h>
int fibonacci(int n){
    if(n>=2){
        return fibonacci(n-1)+fibonacci(n-2);
    }
    else if(n==0||n==1){
        return n;
    }
    else{
        return 0;
    }
}
int main(){
    int c;
    scanf("%d",&c);
    int p=fibonacci(c);
    printf("%d",p%10);
    return 0;
}

23.Bob is working on a text analysis tool and needs your help in developing a program that classifies characters in a given string. The program should count the number of vowels, consonants, digits, and special characters in the input string.The input consists of a String, representing the text in which the counts of vowels, consonants, digits, and special characters will be determined.The first line of output prints "Vowels: " followed by an integer representing the count of vowels in the input string.The second line prints "Consonants: " followed by an integer representing the count of consonants in the input string.The third line prints "Digits: " followed by an integer representing the count of digits in the input string.The fourth line prints "Special Characters: " followed by an integer representing the count of special characters in the input string.The length of the input string will not exceed 150 characters.
#include<stdio.h>
#include<string.h>
int main(){
    char str[150];
    int vow=0,con=0,dig=0,spe=0;
    fgets(str,150,stdin);
    for(int i=0;i<strlen(str);i++){
        int p=(int)str[i];
        if(p>=48 and p<=57){
            dig++;
        }
        else if(p==97||p==101||p==105||p==111||p==117||p==65||p==73||p==79||p==85){
            vow++;
        }
        else if((p>65 and p<=90) or (p>97 and p<=122)){
            con++;
        }
        else{
            spe++;
        }
    }
    printf("Vowels: %d\n",vow);
    printf("Consonants: %d\n",con);
    printf("Digits: %d\n",dig);
    printf("Special Characters: %d\n",spe);
    return 0;
}

24.Teju considers the number 3 unlucky and wishes to remove the element located at the 3rd position in an array, considering the first position in the array as position 1.Write a program that eliminates the element at this 3rd position and then displays the modified array.The first line consists of an integer n, the size of the array.The second line consists of n space-separated integers, representing the elements of the array.In this scenario, the test cases will fall under the following constraints:3 ≤ n ≤ 15 and 1 ≤ elements ≤ 1000.
//Removing 3rd element from an array
#include<stdio.h>
int main(){
    int n;
    scanf("%d",&n);
    int elements[n];
    for(int i=1;i<=n;i++){
        scanf("%d ",&elements[i]);
    }
    for(int i=1;i<=n;i++){
        if(i==3){
            continue;
        }
        else{
            printf("%d ",elements[i]);
        }
    }
    return 0;
}

25.Write a program that lets the user enter the total rainfall for each of the 12 months in an array. The program should calculate and display the total rainfall for the year, the average monthly rainfall, and the months with the highest and lowest amounts of rainfall.The input consists of a list of 12 integers that represent the value of rainfall each month, separated by space.The first line of output prints the total rainfall.The second line of output prints the integer that represents the average rainfall.
The third line of output prints the month with the lowest rainfall.The fourth line of output prints the month with the highest rainfall.Print "Invalid input" if input values<0.
//Rainfall for 12 months
#include<stdio.h>
int main(){
    int avg,sum=0;
    int rain[12];
    for(int i=0;i<12;i++){
        scanf("%d ",&rain[i]);
        if(rain[i]<0){
            printf("Invalid Input");
            break;
        }
        else {
            
            sum+=rain[i];
            continue;
        }
    }
    for(int i=0;i<12;i++){
        if (rain[i]>0){
            avg=sum/12;
            printf("Total rainfall : %d\n",sum);
            printf("Average Rainfall : %d\n",avg);
            int q=rain[0],r=rain[0];
            int a=0,b=0;
            for(int i=0;i<12;i++){
                if(rain[i]<q){
                    q=rain[i];
                    a=i;
                }
                else{
                    continue;
                }
            }
            for(int i=0;i<12;i++){
                if(rain[i]>r){
                    r=rain[i];
                    b=i;
                }
                else{
                    continue;
                }
            }
            printf("Lowest rainfall month : %d\n",a+1);
            printf("Highest rainfall month : %d\n",b+1);
        }
        break;
    }
    return 0;
}




